%!PS-Adobe-2.0 EPSF-2.0
%%Title: ga.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Wed Oct  9 22:00:05 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 381 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 381 50 lineto 381 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ga.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (njustesen)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct  9 22:00:05 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6622.00 4320.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 576 M
5199 0 V
stroke
LTb
LCb setrgbcolor
1098 576 M
63 0 V
5136 0 R
-63 0 V
stroke
990 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 1080 M
5199 0 V
stroke
LTb
LCb setrgbcolor
1098 1080 M
63 0 V
5136 0 R
-63 0 V
stroke
990 1080 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 5000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 1584 M
5199 0 V
stroke
LTb
LCb setrgbcolor
1098 1584 M
63 0 V
5136 0 R
-63 0 V
stroke
990 1584 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 2088 M
5199 0 V
stroke
LTb
LCb setrgbcolor
1098 2088 M
63 0 V
5136 0 R
-63 0 V
stroke
990 2088 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 15000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 2591 M
5199 0 V
stroke
LTb
LCb setrgbcolor
1098 2591 M
63 0 V
5136 0 R
-63 0 V
stroke
990 2591 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 3095 M
5199 0 V
stroke
LTb
LCb setrgbcolor
1098 3095 M
63 0 V
5136 0 R
-63 0 V
stroke
990 3095 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 25000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 3599 M
5199 0 V
stroke
LTb
LCb setrgbcolor
1098 3599 M
63 0 V
5136 0 R
-63 0 V
stroke
990 3599 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 4103 M
5199 0 V
stroke
LTb
LCb setrgbcolor
1098 4103 M
63 0 V
5136 0 R
-63 0 V
stroke
990 4103 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 35000)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1098 576 M
0 3527 V
stroke
LTb
LCb setrgbcolor
1098 576 M
0 63 V
0 3464 R
0 -63 V
stroke
1098 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 1748 576 M
0 3527 V
stroke
LTb
LCb setrgbcolor
1748 576 M
0 63 V
0 3464 R
0 -63 V
stroke
1748 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 5)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 2398 576 M
0 3527 V
stroke
LTb
LCb setrgbcolor
2398 576 M
0 63 V
0 3464 R
0 -63 V
stroke
2398 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 3048 576 M
0 3527 V
stroke
LTb
LCb setrgbcolor
3048 576 M
0 63 V
0 3464 R
0 -63 V
stroke
3048 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 15)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 3698 576 M
0 3527 V
stroke
LTb
LCb setrgbcolor
3698 576 M
0 63 V
0 3464 R
0 -63 V
stroke
3698 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 4347 576 M
0 63 V
0 360 R
0 3104 V
stroke
LTb
LCb setrgbcolor
4347 576 M
0 63 V
0 3464 R
0 -63 V
stroke
4347 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 25)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 4997 576 M
0 63 V
0 360 R
0 3104 V
stroke
LTb
LCb setrgbcolor
4997 576 M
0 63 V
0 3464 R
0 -63 V
stroke
4997 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 5647 576 M
0 63 V
0 360 R
0 3104 V
stroke
LTb
LCb setrgbcolor
5647 576 M
0 63 V
0 3464 R
0 -63 V
stroke
5647 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 35)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LT0
0.75 0.75 0.75 C 6297 576 M
0 3527 V
stroke
LTb
LCb setrgbcolor
6297 576 M
0 63 V
0 3464 R
0 -63 V
stroke
6297 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1098 4103 N
0 -3527 V
5199 0 V
0 3527 V
-5199 0 V
Z stroke
LCb setrgbcolor
144 2339 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Fitness)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
3697 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (Generation)]
] -60.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
2.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
5478 909 M
[ [(Helvetica) 180.0 0.0 true true 0 (Best fitness)]
] -60.0 MRshow
LT0
5586 909 M
495 0 V
1098 576 M
130 90 V
130 242 V
130 19 V
130 1276 V
130 -201 V
130 -68 V
130 917 V
130 -561 V
130 526 V
130 -345 V
130 346 V
130 -271 V
130 228 V
130 785 V
3048 2544 L
130 548 V
130 -459 V
130 32 V
130 646 V
130 -907 V
129 321 V
130 -94 V
130 -151 V
130 632 V
130 154 V
130 -632 V
130 -93 V
130 565 V
130 -449 V
130 474 V
130 -403 V
130 34 V
130 1125 V
130 -880 V
130 -90 V
130 17 V
130 190 V
130 225 V
130 -100 V
130 -547 V
1098 576 Pls
1228 666 Pls
1358 908 Pls
1488 927 Pls
1618 2203 Pls
1748 2002 Pls
1878 1934 Pls
2008 2851 Pls
2138 2290 Pls
2268 2816 Pls
2398 2471 Pls
2528 2817 Pls
2658 2546 Pls
2788 2774 Pls
2918 3559 Pls
3048 2544 Pls
3178 3092 Pls
3308 2633 Pls
3438 2665 Pls
3568 3311 Pls
3698 2404 Pls
3827 2725 Pls
3957 2631 Pls
4087 2480 Pls
4217 3112 Pls
4347 3266 Pls
4477 2634 Pls
4607 2541 Pls
4737 3106 Pls
4867 2657 Pls
4997 3131 Pls
5127 2728 Pls
5257 2762 Pls
5387 3887 Pls
5517 3007 Pls
5647 2917 Pls
5777 2934 Pls
5907 3124 Pls
6037 3349 Pls
6167 3249 Pls
6297 2702 Pls
5833 909 Pls
% End plot #1
% Begin plot #2
2.000 UP
1.000 UL
LT0
0.00 0.00 1.00 C LCb setrgbcolor
5478 729 M
[ [(Helvetica) 180.0 0.0 true true 0 (Avg. fitness)]
] -60.0 MRshow
LT0
0.00 0.00 1.00 C 5586 729 M
495 0 V
1098 576 M
130 28 V
130 28 V
130 70 V
130 97 V
130 150 V
130 143 V
130 280 V
130 304 V
130 -45 V
130 385 V
130 -534 V
130 458 V
130 -60 V
130 -220 V
130 213 V
130 -14 V
130 97 V
130 308 V
130 -450 V
130 -143 V
129 88 V
130 -162 V
130 302 V
130 1 V
130 -229 V
130 -24 V
130 192 V
130 -148 V
130 387 V
130 -244 V
130 27 V
130 -118 V
130 47 V
130 -133 V
130 226 V
130 -61 V
130 -75 V
130 204 V
130 -227 V
130 48 V
1098 576 Pls
1228 604 Pls
1358 632 Pls
1488 702 Pls
1618 799 Pls
1748 949 Pls
1878 1092 Pls
2008 1372 Pls
2138 1676 Pls
2268 1631 Pls
2398 2016 Pls
2528 1482 Pls
2658 1940 Pls
2788 1880 Pls
2918 1660 Pls
3048 1873 Pls
3178 1859 Pls
3308 1956 Pls
3438 2264 Pls
3568 1814 Pls
3698 1671 Pls
3827 1759 Pls
3957 1597 Pls
4087 1899 Pls
4217 1900 Pls
4347 1671 Pls
4477 1647 Pls
4607 1839 Pls
4737 1691 Pls
4867 2078 Pls
4997 1834 Pls
5127 1861 Pls
5257 1743 Pls
5387 1790 Pls
5517 1657 Pls
5647 1883 Pls
5777 1822 Pls
5907 1747 Pls
6037 1951 Pls
6167 1724 Pls
6297 1772 Pls
5833 729 Pls
% End plot #2
1.000 UL
LTb
LCb setrgbcolor
1098 4103 N
0 -3527 V
5199 0 V
0 3527 V
-5199 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
